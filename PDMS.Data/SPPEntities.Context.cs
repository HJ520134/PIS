//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PDMS.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SPPContext : DbContext
    {
        public SPPContext()
            : base("name=SPPContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
    		base.OnModelCreating(modelBuilder);
            SPPEntityConfiguration.SPPOnModelCreating(modelBuilder);
        }
    
    	public virtual void Commit()
    		{
    		base.SaveChanges();
    	}
    
        public virtual DbSet<Enumeration> Enumeration { get; set; }
        public virtual DbSet<EQP_Forecast_PowerOn> EQP_Forecast_PowerOn { get; set; }
        public virtual DbSet<EQP_PowerOn> EQP_PowerOn { get; set; }
        public virtual DbSet<EQP_Type> EQP_Type { get; set; }
        public virtual DbSet<ExceptionTypeWithFlowchart> ExceptionTypeWithFlowchart { get; set; }
        public virtual DbSet<FlowChart_Master> FlowChart_Master { get; set; }
        public virtual DbSet<FlowChart_MgData> FlowChart_MgData { get; set; }
        public virtual DbSet<FlowChart_PC_MH_Relationship> FlowChart_PC_MH_Relationship { get; set; }
        public virtual DbSet<Labor_UsingInfo> Labor_UsingInfo { get; set; }
        public virtual DbSet<Material_Spareparts_Demand> Material_Spareparts_Demand { get; set; }
        public virtual DbSet<Notice> Notice { get; set; }
        public virtual DbSet<OQC_InputDetail> OQC_InputDetail { get; set; }
        public virtual DbSet<OQC_InputDetail_History> OQC_InputDetail_History { get; set; }
        public virtual DbSet<OQC_InputMaster> OQC_InputMaster { get; set; }
        public virtual DbSet<OQC_InputMaster_History> OQC_InputMaster_History { get; set; }
        public virtual DbSet<PPForQAInterface> PPForQAInterface { get; set; }
        public virtual DbSet<Product_Input_History> Product_Input_History { get; set; }
        public virtual DbSet<Product_Rework_Info_History> Product_Rework_Info_History { get; set; }
        public virtual DbSet<Project_Users_Group> Project_Users_Group { get; set; }
        public virtual DbSet<QualityAssurance_DataChangeLog> QualityAssurance_DataChangeLog { get; set; }
        public virtual DbSet<QualityAssurance_DistributeRate> QualityAssurance_DistributeRate { get; set; }
        public virtual DbSet<QualityAssurance_InputDetail> QualityAssurance_InputDetail { get; set; }
        public virtual DbSet<QualityAssurance_InputDetail_History> QualityAssurance_InputDetail_History { get; set; }
        public virtual DbSet<QualityAssurance_InputMaster> QualityAssurance_InputMaster { get; set; }
        public virtual DbSet<QualityAssurance_InputMaster_History> QualityAssurance_InputMaster_History { get; set; }
        public virtual DbSet<QualityAssurance_MgData> QualityAssurance_MgData { get; set; }
        public virtual DbSet<Storage_Outbound_M> Storage_Outbound_M { get; set; }
        public virtual DbSet<System_BU_M> System_BU_M { get; set; }
        public virtual DbSet<System_Function> System_Function { get; set; }
        public virtual DbSet<System_Function_Plant> System_Function_Plant { get; set; }
        public virtual DbSet<System_FunctionSub> System_FunctionSub { get; set; }
        public virtual DbSet<System_OrganizationBOM> System_OrganizationBOM { get; set; }
        public virtual DbSet<System_Plant> System_Plant { get; set; }
        public virtual DbSet<System_Role_Function> System_Role_Function { get; set; }
        public virtual DbSet<System_Role_FunctionSub> System_Role_FunctionSub { get; set; }
        public virtual DbSet<System_User_Business_Group> System_User_Business_Group { get; set; }
        public virtual DbSet<System_User_FunPlant> System_User_FunPlant { get; set; }
        public virtual DbSet<System_User_Plant> System_User_Plant { get; set; }
        public virtual DbSet<System_User_Role> System_User_Role { get; set; }
        public virtual DbSet<System_User_View> System_User_View { get; set; }
        public virtual DbSet<System_UserOrg> System_UserOrg { get; set; }
        public virtual DbSet<System_View_Column> System_View_Column { get; set; }
        public virtual DbSet<Warehouse> Warehouse { get; set; }
        public virtual DbSet<Warehouse_Storage> Warehouse_Storage { get; set; }
        public virtual DbSet<Warning_List> Warning_List { get; set; }
        public virtual DbSet<WIP_Change_History> WIP_Change_History { get; set; }
        public virtual DbSet<Material_Repair_Demand> Material_Repair_Demand { get; set; }
        public virtual DbSet<Material_Reason> Material_Reason { get; set; }
        public virtual DbSet<Meterial_UpdateInfo> Meterial_UpdateInfo { get; set; }
        public virtual DbSet<Material_Demand_Summary> Material_Demand_Summary { get; set; }
        public virtual DbSet<System_BU_D> System_BU_D { get; set; }
        public virtual DbSet<System_BU_D_Org> System_BU_D_Org { get; set; }
        public virtual DbSet<System_Organization> System_Organization { get; set; }
        public virtual DbSet<System_Language> System_Language { get; set; }
        public virtual DbSet<System_LocaleStringResource> System_LocaleStringResource { get; set; }
        public virtual DbSet<Product_Input_Location> Product_Input_Location { get; set; }
        public virtual DbSet<Material_Inventory> Material_Inventory { get; set; }
        public virtual DbSet<Material_Normal_Demand> Material_Normal_Demand { get; set; }
        public virtual DbSet<Storage_Check> Storage_Check { get; set; }
        public virtual DbSet<Storage_Inbound> Storage_Inbound { get; set; }
        public virtual DbSet<Storage_InOut_Detail> Storage_InOut_Detail { get; set; }
        public virtual DbSet<Storage_Transfer> Storage_Transfer { get; set; }
        public virtual DbSet<Storage_Outbound_D> Storage_Outbound_D { get; set; }
        public virtual DbSet<Product_Input> Product_Input { get; set; }
        public virtual DbSet<Product_Rework_Info> Product_Rework_Info { get; set; }
        public virtual DbSet<DefectCode_Group> DefectCode_Group { get; set; }
        public virtual DbSet<DefectCode_RepairSolution> DefectCode_RepairSolution { get; set; }
        public virtual DbSet<Fixture_DefectCode> Fixture_DefectCode { get; set; }
        public virtual DbSet<Fixture_Maintenance_Profile> Fixture_Maintenance_Profile { get; set; }
        public virtual DbSet<Fixture_Repair_D_Defect> Fixture_Repair_D_Defect { get; set; }
        public virtual DbSet<Fixture_RepairSolution> Fixture_RepairSolution { get; set; }
        public virtual DbSet<Fixture_Resume> Fixture_Resume { get; set; }
        public virtual DbSet<Fixture_Totake_D> Fixture_Totake_D { get; set; }
        public virtual DbSet<Fixture_User_Workshop> Fixture_User_Workshop { get; set; }
        public virtual DbSet<FixtureDefectCode_Setting> FixtureDefectCode_Setting { get; set; }
        public virtual DbSet<Process_Info> Process_Info { get; set; }
        public virtual DbSet<Production_Line> Production_Line { get; set; }
        public virtual DbSet<Repair_Location> Repair_Location { get; set; }
        public virtual DbSet<Vendor_Info> Vendor_Info { get; set; }
        public virtual DbSet<Workshop> Workshop { get; set; }
        public virtual DbSet<WorkStation> WorkStation { get; set; }
        public virtual DbSet<Fixture_Repair_D> Fixture_Repair_D { get; set; }
        public virtual DbSet<Maintenance_Plan> Maintenance_Plan { get; set; }
        public virtual DbSet<EQP_Material> EQP_Material { get; set; }
        public virtual DbSet<Fixture_Maintenance_Record> Fixture_Maintenance_Record { get; set; }
        public virtual DbSet<Fixture_Repair_M> Fixture_Repair_M { get; set; }
        public virtual DbSet<Fixture_Totake_M> Fixture_Totake_M { get; set; }
        public virtual DbSet<Fixture_Maintenance_Record_History> Fixture_Maintenance_Record_History { get; set; }
        public virtual DbSet<Fixture_Resume_History> Fixture_Resume_History { get; set; }
        public virtual DbSet<Fixture_Part_Inventory> Fixture_Part_Inventory { get; set; }
        public virtual DbSet<Fixture_Storage_InOut_Detail> Fixture_Storage_InOut_Detail { get; set; }
        public virtual DbSet<Fixture_Storage_Transfer> Fixture_Storage_Transfer { get; set; }
        public virtual DbSet<Fixture_Warehouse_Storage> Fixture_Warehouse_Storage { get; set; }
        public virtual DbSet<System_Email_Attachment> System_Email_Attachment { get; set; }
        public virtual DbSet<System_Email_M> System_Email_M { get; set; }
        public virtual DbSet<System_Module> System_Module { get; set; }
        public virtual DbSet<Batch_Log> Batch_Log { get; set; }
        public virtual DbSet<System_Email_Delivery> System_Email_Delivery { get; set; }
        public virtual DbSet<Fixture_Warehouse> Fixture_Warehouse { get; set; }
        public virtual DbSet<Fixture_Storage_Inbound> Fixture_Storage_Inbound { get; set; }
        public virtual DbSet<Fixture_Storage_Outbound_D> Fixture_Storage_Outbound_D { get; set; }
        public virtual DbSet<QEboardSum> QEboardSum { get; set; }
        public virtual DbSet<TopTenQeboard> TopTenQeboard { get; set; }
        public virtual DbSet<System_Schedule> System_Schedule { get; set; }
        public virtual DbSet<Fixture_Storage_Outbound_M> Fixture_Storage_Outbound_M { get; set; }
        public virtual DbSet<QTrace_Sum> QTrace_Sum { get; set; }
        public virtual DbSet<QTrace_TopTen_Sum> QTrace_TopTen_Sum { get; set; }
        public virtual DbSet<Fixture_Part_Demand_D> Fixture_Part_Demand_D { get; set; }
        public virtual DbSet<Fixture_Part_Demand_Summary_D> Fixture_Part_Demand_Summary_D { get; set; }
        public virtual DbSet<System_LocalizedProperty> System_LocalizedProperty { get; set; }
        public virtual DbSet<Fixture_Part_Demand_M> Fixture_Part_Demand_M { get; set; }
        public virtual DbSet<Fixture_Part_Demand_Summary_M> Fixture_Part_Demand_Summary_M { get; set; }
        public virtual DbSet<Fixture_Storage_Check> Fixture_Storage_Check { get; set; }
        public virtual DbSet<Fixture_Part_Order_D> Fixture_Part_Order_D { get; set; }
        public virtual DbSet<EQP_UserTable> EQP_UserTable { get; set; }
        public virtual DbSet<Material_Info> Material_Info { get; set; }
        public virtual DbSet<Material_Maintenance_Record> Material_Maintenance_Record { get; set; }
        public virtual DbSet<System_Role> System_Role { get; set; }
        public virtual DbSet<Fixture_Part_Order_Schedule> Fixture_Part_Order_Schedule { get; set; }
        public virtual DbSet<Fixture_Part_Order_M> Fixture_Part_Order_M { get; set; }
        public virtual DbSet<Electrical_Board_DT> Electrical_Board_DT { get; set; }
        public virtual DbSet<FlowChart_Detail> FlowChart_Detail { get; set; }
        public virtual DbSet<Machine_Schedule_Config> Machine_Schedule_Config { get; set; }
        public virtual DbSet<Machine_Station> Machine_Station { get; set; }
        public virtual DbSet<Machine_Yield> Machine_Yield { get; set; }
        public virtual DbSet<APP_USER_FAVORITES_FUNCTION> APP_USER_FAVORITES_FUNCTION { get; set; }
        public virtual DbSet<LogMessageRecord> LogMessageRecord { get; set; }
        public virtual DbSet<ClampRate> ClampRate { get; set; }
        public virtual DbSet<ClampRateHistory> ClampRateHistory { get; set; }
        public virtual DbSet<CuttingFluid> CuttingFluid { get; set; }
        public virtual DbSet<CuttingFluidHistory> CuttingFluidHistory { get; set; }
        public virtual DbSet<KnifeLifeTime> KnifeLifeTime { get; set; }
        public virtual DbSet<KnifeLifeTime_History> KnifeLifeTime_History { get; set; }
        public virtual DbSet<LoadSpeed> LoadSpeed { get; set; }
        public virtual DbSet<LoadSpeedHistory> LoadSpeedHistory { get; set; }
        public virtual DbSet<MachineCapacity> MachineCapacity { get; set; }
        public virtual DbSet<MachineCapacityHistory> MachineCapacityHistory { get; set; }
        public virtual DbSet<OrigCoordMon> OrigCoordMon { get; set; }
        public virtual DbSet<OrigCoordMonHistory> OrigCoordMonHistory { get; set; }
        public virtual DbSet<System_Seq> System_Seq { get; set; }
        public virtual DbSet<TwoHoursCapacity> TwoHoursCapacity { get; set; }
        public virtual DbSet<TwoHoursCapacityHistory> TwoHoursCapacityHistory { get; set; }
        public virtual DbSet<System_Role_Function_SystemAdmin> System_Role_Function_SystemAdmin { get; set; }
        public virtual DbSet<System_Role_Function_Z> System_Role_Function_Z { get; set; }
        public virtual DbSet<System_Role_FunctionSub_SystemAdmin> System_Role_FunctionSub_SystemAdmin { get; set; }
        public virtual DbSet<System_Role_FunctionSub_Z> System_Role_FunctionSub_Z { get; set; }
        public virtual DbSet<Tmp_Fixture_Part> Tmp_Fixture_Part { get; set; }
        public virtual DbSet<MES_StationDataRecord> MES_StationDataRecord { get; set; }
        public virtual DbSet<MES_PIS_SyncFailedRecord> MES_PIS_SyncFailedRecord { get; set; }
        public virtual DbSet<ModelLineHR> ModelLineHR { get; set; }
        public virtual DbSet<Machine_Customer> Machine_Customer { get; set; }
        public virtual DbSet<Mes_StationColor> Mes_StationColor { get; set; }
        public virtual DbSet<MES_SNOriginal> MES_SNOriginal { get; set; }
        public virtual DbSet<QualityAssurance_ExceptionType> QualityAssurance_ExceptionType { get; set; }
        public virtual DbSet<QualityAssurance_ExceptionType_Temp> QualityAssurance_ExceptionType_Temp { get; set; }
        public virtual DbSet<GL_AssemblyModel> GL_AssemblyModel { get; set; }
        public virtual DbSet<GL_AssemblyModelChange> GL_AssemblyModelChange { get; set; }
        public virtual DbSet<GL_BuildPlanLineMapping> GL_BuildPlanLineMapping { get; set; }
        public virtual DbSet<GL_BuildPlanSource> GL_BuildPlanSource { get; set; }
        public virtual DbSet<GL_CustomerShiftPerf> GL_CustomerShiftPerf { get; set; }
        public virtual DbSet<GL_CustomerTarget> GL_CustomerTarget { get; set; }
        public virtual DbSet<GL_DataSource> GL_DataSource { get; set; }
        public virtual DbSet<GL_Device> GL_Device { get; set; }
        public virtual DbSet<GL_GoldenStationCTRecord> GL_GoldenStationCTRecord { get; set; }
        public virtual DbSet<GL_LineHistory> GL_LineHistory { get; set; }
        public virtual DbSet<GL_LineShiftPerf> GL_LineShiftPerf { get; set; }
        public virtual DbSet<GL_MealTime> GL_MealTime { get; set; }
        public virtual DbSet<GL_MESSource> GL_MESSource { get; set; }
        public virtual DbSet<GL_StationShiftPerf> GL_StationShiftPerf { get; set; }
        public virtual DbSet<GL_StdLineModel> GL_StdLineModel { get; set; }
        public virtual DbSet<GL_StdLineModelStation> GL_StdLineModelStation { get; set; }
        public virtual DbSet<GL_StdWIPRoute> GL_StdWIPRoute { get; set; }
        public virtual DbSet<GL_StdWIPRouteSummary> GL_StdWIPRouteSummary { get; set; }
        public virtual DbSet<GL_WIPEvent> GL_WIPEvent { get; set; }
        public virtual DbSet<GL_WIPHourOutput> GL_WIPHourOutput { get; set; }
        public virtual DbSet<GL_WIPShiftBatchOutput> GL_WIPShiftBatchOutput { get; set; }
        public virtual DbSet<GL_WIPShiftOutput> GL_WIPShiftOutput { get; set; }
        public virtual DbSet<GL_BuildPlan> GL_BuildPlan { get; set; }
        public virtual DbSet<Actual_Production_Equipment_Qty> Actual_Production_Equipment_Qty { get; set; }
        public virtual DbSet<Actual_Production_Manpower> Actual_Production_Manpower { get; set; }
        public virtual DbSet<Current_Manpower> Current_Manpower { get; set; }
        public virtual DbSet<DemissionRateAndWorkSchedule> DemissionRateAndWorkSchedule { get; set; }
        public virtual DbSet<Predict_Production_Information> Predict_Production_Information { get; set; }
        public virtual DbSet<RP_Demand_Calculation_Record> RP_Demand_Calculation_Record { get; set; }
        public virtual DbSet<RP_Equipment_Demand> RP_Equipment_Demand { get; set; }
        public virtual DbSet<RP_Flowchart_Detail_ME> RP_Flowchart_Detail_ME { get; set; }
        public virtual DbSet<RP_Flowchart_Detail_ME_Equipment> RP_Flowchart_Detail_ME_Equipment { get; set; }
        public virtual DbSet<RP_Flowchart_Master> RP_Flowchart_Master { get; set; }
        public virtual DbSet<RP_Manpower_Demand> RP_Manpower_Demand { get; set; }
        public virtual DbSet<RP_Flowchart_Detail_IE> RP_Flowchart_Detail_IE { get; set; }
        public virtual DbSet<System_Project> System_Project { get; set; }
        public virtual DbSet<ProcessIDTransformConfig> ProcessIDTransformConfig { get; set; }
        public virtual DbSet<GL_StationHistory> GL_StationHistory { get; set; }
        public virtual DbSet<GL_Line> GL_Line { get; set; }
        public virtual DbSet<OEE_StationDefectCode> OEE_StationDefectCode { get; set; }
        public virtual DbSet<OEE_StationImprovement_Plan> OEE_StationImprovement_Plan { get; set; }
        public virtual DbSet<OEE_UserStation> OEE_UserStation { get; set; }
        public virtual DbSet<PlayBoard_View> PlayBoard_View { get; set; }
        public virtual DbSet<Fixture_M> Fixture_M { get; set; }
        public virtual DbSet<Fixture_Part> Fixture_Part { get; set; }
        public virtual DbSet<Fixture_Part_Setting_D> Fixture_Part_Setting_D { get; set; }
        public virtual DbSet<Fixture_Part_Setting_M> Fixture_Part_Setting_M { get; set; }
        public virtual DbSet<Product_Input_Location_History> Product_Input_Location_History { get; set; }
        public virtual DbSet<Fixture_M_UseScanHistory> Fixture_M_UseScanHistory { get; set; }
        public virtual DbSet<OEE_DefectCodeDailySum> OEE_DefectCodeDailySum { get; set; }
        public virtual DbSet<Fixture_Part_UseTimes> Fixture_Part_UseTimes { get; set; }
        public virtual DbSet<OEE_StationDailyDownSum> OEE_StationDailyDownSum { get; set; }
        public virtual DbSet<Fixture_Part_ClearHistory> Fixture_Part_ClearHistory { get; set; }
        public virtual DbSet<CNCMachine> CNCMachine { get; set; }
        public virtual DbSet<PlayBoard_PlayTime> PlayBoard_PlayTime { get; set; }
        public virtual DbSet<GL_ShiftTime> GL_ShiftTime { get; set; }
        public virtual DbSet<CNCMachineColumnTable> CNCMachineColumnTable { get; set; }
        public virtual DbSet<PlayBoard_Setting> PlayBoard_Setting { get; set; }
        public virtual DbSet<Equipment_Info> Equipment_Info { get; set; }
        public virtual DbSet<OEE_MachineInfo> OEE_MachineInfo { get; set; }
        public virtual DbSet<Fixture_Machine> Fixture_Machine { get; set; }
        public virtual DbSet<Mes_OutShipMent> Mes_OutShipMent { get; set; }
        public virtual DbSet<GL_QADetectionPoint> GL_QADetectionPoint { get; set; }
        public virtual DbSet<GL_QATargetYield> GL_QATargetYield { get; set; }
        public virtual DbSet<IPQCQualityDetial> IPQCQualityDetial { get; set; }
        public virtual DbSet<IPQCQualityReport> IPQCQualityReport { get; set; }
        public virtual DbSet<GL_LineShiftResposibleUser> GL_LineShiftResposibleUser { get; set; }
        public virtual DbSet<Fixture_Return_M> Fixture_Return_M { get; set; }
        public virtual DbSet<OEE_DefectCodeDailyNum> OEE_DefectCodeDailyNum { get; set; }
        public virtual DbSet<GL_Rest> GL_Rest { get; set; }
        public virtual DbSet<OEE_DownTimeCode> OEE_DownTimeCode { get; set; }
        public virtual DbSet<Fixture_Return_D> Fixture_Return_D { get; set; }
        public virtual DbSet<OEE_DownTimeType> OEE_DownTimeType { get; set; }
        public virtual DbSet<OEE_EveryDayDFcodeMissing> OEE_EveryDayDFcodeMissing { get; set; }
        public virtual DbSet<CostCtr_info> CostCtr_info { get; set; }
        public virtual DbSet<EQPRepair_Info> EQPRepair_Info { get; set; }
        public virtual DbSet<GL_Station> GL_Station { get; set; }
        public virtual DbSet<OEE_EveryDayMachineDTCode> OEE_EveryDayMachineDTCode { get; set; }
        public virtual DbSet<FlowChart_IEData> FlowChart_IEData { get; set; }
        public virtual DbSet<OEE_MachineStatus> OEE_MachineStatus { get; set; }
        public virtual DbSet<Exception_Code> Exception_Code { get; set; }
        public virtual DbSet<Exception_Dept> Exception_Dept { get; set; }
        public virtual DbSet<Exception_Reply> Exception_Reply { get; set; }
        public virtual DbSet<Exception_Resume> Exception_Resume { get; set; }
        public virtual DbSet<Exception_Shedule> Exception_Shedule { get; set; }
        public virtual DbSet<Exception_Time> Exception_Time { get; set; }
        public virtual DbSet<System_Users> System_Users { get; set; }
        public virtual DbSet<OEE_EveryDayMachine> OEE_EveryDayMachine { get; set; }
        public virtual DbSet<OEE_MachineDailyDownRecord> OEE_MachineDailyDownRecord { get; set; }
        public virtual DbSet<GL_LineGroup> GL_LineGroup { get; set; }
        public virtual DbSet<Exception_Project> Exception_Project { get; set; }
        public virtual DbSet<Exception_Email> Exception_Email { get; set; }
        public virtual DbSet<OEE_ImprovementPlan> OEE_ImprovementPlan { get; set; }
        public virtual DbSet<OEE_MeetingTypeInfo> OEE_MeetingTypeInfo { get; set; }
        public virtual DbSet<OEE_MetricInfo> OEE_MetricInfo { get; set; }
        public virtual DbSet<Exception_Record> Exception_Record { get; set; }
        public virtual DbSet<OEE_ImprovementPlanD> OEE_ImprovementPlanD { get; set; }
        public virtual DbSet<GL_ActionTaskerD> GL_ActionTaskerD { get; set; }
        public virtual DbSet<GL_MeetingTypeInfo> GL_MeetingTypeInfo { get; set; }
        public virtual DbSet<GL_MetricInfo> GL_MetricInfo { get; set; }
        public virtual DbSet<GL_ActionTasker> GL_ActionTasker { get; set; }
    
        public virtual int usp_AlterMisMatchFlag(Nullable<int> flowChart_Master_UID, Nullable<int> flowChart_Version, string time_interval, Nullable<System.DateTime> product_date)
        {
            var flowChart_Master_UIDParameter = flowChart_Master_UID.HasValue ?
                new ObjectParameter("FlowChart_Master_UID", flowChart_Master_UID) :
                new ObjectParameter("FlowChart_Master_UID", typeof(int));
    
            var flowChart_VersionParameter = flowChart_Version.HasValue ?
                new ObjectParameter("FlowChart_Version", flowChart_Version) :
                new ObjectParameter("FlowChart_Version", typeof(int));
    
            var time_intervalParameter = time_interval != null ?
                new ObjectParameter("Time_interval", time_interval) :
                new ObjectParameter("Time_interval", typeof(string));
    
            var product_dateParameter = product_date.HasValue ?
                new ObjectParameter("Product_date", product_date) :
                new ObjectParameter("Product_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AlterMisMatchFlag", flowChart_Master_UIDParameter, flowChart_VersionParameter, time_intervalParameter, product_dateParameter);
        }
    
        public virtual int usp_CalculateWIP(string time_Interval, Nullable<System.DateTime> product_Date, Nullable<int> flowChart_Master_UID, Nullable<int> flowChart_Detail_UID, string funPlant, Nullable<int> product_UID)
        {
            var time_IntervalParameter = time_Interval != null ?
                new ObjectParameter("Time_Interval", time_Interval) :
                new ObjectParameter("Time_Interval", typeof(string));
    
            var product_DateParameter = product_Date.HasValue ?
                new ObjectParameter("Product_Date", product_Date) :
                new ObjectParameter("Product_Date", typeof(System.DateTime));
    
            var flowChart_Master_UIDParameter = flowChart_Master_UID.HasValue ?
                new ObjectParameter("FlowChart_Master_UID", flowChart_Master_UID) :
                new ObjectParameter("FlowChart_Master_UID", typeof(int));
    
            var flowChart_Detail_UIDParameter = flowChart_Detail_UID.HasValue ?
                new ObjectParameter("FlowChart_Detail_UID", flowChart_Detail_UID) :
                new ObjectParameter("FlowChart_Detail_UID", typeof(int));
    
            var funPlantParameter = funPlant != null ?
                new ObjectParameter("FunPlant", funPlant) :
                new ObjectParameter("FunPlant", typeof(string));
    
            var product_UIDParameter = product_UID.HasValue ?
                new ObjectParameter("Product_UID", product_UID) :
                new ObjectParameter("Product_UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CalculateWIP", time_IntervalParameter, product_DateParameter, flowChart_Master_UIDParameter, flowChart_Detail_UIDParameter, funPlantParameter, product_UIDParameter);
        }
    
        public virtual ObjectResult<usp_get_mobilefunctions_by_useruid_Result> usp_get_mobilefunctions_by_useruid(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_get_mobilefunctions_by_useruid_Result>("usp_get_mobilefunctions_by_useruid", idParameter);
        }
    
        public virtual int usp_SynFlowChartDetailDataFromTemp()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SynFlowChartDetailDataFromTemp");
        }
    
        public virtual int usp_AllProductData(string time_Interval, string product_Date, string customer, string project, string product_Phase, string part_Types, string color, string now_Interval, string now_Date, Nullable<int> flowchart_Version)
        {
            var time_IntervalParameter = time_Interval != null ?
                new ObjectParameter("Time_Interval", time_Interval) :
                new ObjectParameter("Time_Interval", typeof(string));
    
            var product_DateParameter = product_Date != null ?
                new ObjectParameter("Product_Date", product_Date) :
                new ObjectParameter("Product_Date", typeof(string));
    
            var customerParameter = customer != null ?
                new ObjectParameter("Customer", customer) :
                new ObjectParameter("Customer", typeof(string));
    
            var projectParameter = project != null ?
                new ObjectParameter("Project", project) :
                new ObjectParameter("Project", typeof(string));
    
            var product_PhaseParameter = product_Phase != null ?
                new ObjectParameter("Product_Phase", product_Phase) :
                new ObjectParameter("Product_Phase", typeof(string));
    
            var part_TypesParameter = part_Types != null ?
                new ObjectParameter("Part_Types", part_Types) :
                new ObjectParameter("Part_Types", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var now_IntervalParameter = now_Interval != null ?
                new ObjectParameter("Now_Interval", now_Interval) :
                new ObjectParameter("Now_Interval", typeof(string));
    
            var now_DateParameter = now_Date != null ?
                new ObjectParameter("Now_Date", now_Date) :
                new ObjectParameter("Now_Date", typeof(string));
    
            var flowchart_VersionParameter = flowchart_Version.HasValue ?
                new ObjectParameter("Flowchart_Version", flowchart_Version) :
                new ObjectParameter("Flowchart_Version", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AllProductData", time_IntervalParameter, product_DateParameter, customerParameter, projectParameter, product_PhaseParameter, part_TypesParameter, colorParameter, now_IntervalParameter, now_DateParameter, flowchart_VersionParameter);
        }
    
        public virtual ObjectResult<string> MODIFY_LAST_WIP(string now_TimeInterval, Nullable<System.DateTime> now_ProductDate, string last_TimeInterval, Nullable<System.DateTime> last_ProductDate, Nullable<int> flowChart_Master_UID)
        {
            var now_TimeIntervalParameter = now_TimeInterval != null ?
                new ObjectParameter("Now_TimeInterval", now_TimeInterval) :
                new ObjectParameter("Now_TimeInterval", typeof(string));
    
            var now_ProductDateParameter = now_ProductDate.HasValue ?
                new ObjectParameter("Now_ProductDate", now_ProductDate) :
                new ObjectParameter("Now_ProductDate", typeof(System.DateTime));
    
            var last_TimeIntervalParameter = last_TimeInterval != null ?
                new ObjectParameter("Last_TimeInterval", last_TimeInterval) :
                new ObjectParameter("Last_TimeInterval", typeof(string));
    
            var last_ProductDateParameter = last_ProductDate.HasValue ?
                new ObjectParameter("Last_ProductDate", last_ProductDate) :
                new ObjectParameter("Last_ProductDate", typeof(System.DateTime));
    
            var flowChart_Master_UIDParameter = flowChart_Master_UID.HasValue ?
                new ObjectParameter("FlowChart_Master_UID", flowChart_Master_UID) :
                new ObjectParameter("FlowChart_Master_UID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("MODIFY_LAST_WIP", now_TimeIntervalParameter, now_ProductDateParameter, last_TimeIntervalParameter, last_ProductDateParameter, flowChart_Master_UIDParameter);
        }
    
        public virtual int usp_Add_ElectricalBoardDtByType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Add_ElectricalBoardDtByType");
        }
    }
}
